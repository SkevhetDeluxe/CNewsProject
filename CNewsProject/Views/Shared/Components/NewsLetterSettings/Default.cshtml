@using CNewsProject.StaticTempData
@using Stripe
@model NLUserSetting

<div>
    @{
        // Vars and Setup

        List<string> authorNames = new();
        List<string> subscribedTo = new();

        var dynAuthorList = ViewBag.authorList;
        foreach (var item in dynAuthorList)
        {
            authorNames.Add(item);
        }

        var dynSubscribedTo = ViewBag.subscribedTo;
        foreach (var item in dynSubscribedTo)
        {
            subscribedTo.Add(item);
        }

        SearchBarSetting authorSearchSetting = new(authorNames, "author", "AddAuthorToSubscribed", "Author", "Add");
    }

    <h5 id="personalisedSettingsHitBox" class="c-hover-pointer c-nonselectable">Personalised News Letter</h5>

    <div id="personalisedSettingsTarget" class="c-hidden">
        <div class="row">
            <form id="newsLetterSettingsForm" asp-action="UpdateNewsLetterSetting" method="post">

                <div>
                    <label class="col-9" asp-for="Latest">Include Latest News</label>
                    <input class="offset-1 col-1" asp-for="Latest"></input><br/>
                </div>
                <div>
                    <label class="col-9" asp-for="Popular">Include Popular News</label>
                    <input class="offset-1 col-1" asp-for="Popular"></input><br/>
                </div>

                <div>
                    <h6 style="font-weight: bold">
                        Included Categories
                    </h6>
                </div>
                <select name="CategoryIds" multiple="multiple">
                    <option value="1">Local</option>
                    <option value="2">Economy</option>
                    <option value="3">Sport</option>
                    <option value="4">Sweden</option>
                    <option value="5">World</option>
                </select>
                

                <div id="authorNamesHitBox" class="c-hover-pointer c-nonselectable">
                    <h4 style="font-weight: bold;">Subscribed Authors</h4>
                </div>
                <div id="authorNamesTarget">
                    <partial name="_searchBarWithSuggestionsPartial" model="authorSearchSetting"/>
                    <div id="authorNamesContainer" class="col-9">
                    </div>
                    <input type="hidden" id="returnToAuthorArray"/>
                </div>

                <br/>
                <button id="updateNewsLetterButton" class="btn btn-primary">Update</button>
            </form>
        </div>
    </div>
</div>


<script src="/js/cscripts.js"></script>
<script type="text/javascript">
    
    AddToggleableElementId("personalisedSettingsHitBox","personalisedSettingsTarget");
    AddToggleableElementId("authorNamesHitBox","authorNamesTarget");
        
    document.addEventListener("DOMContentLoaded", function () {
    
        const inputBox = document.getElementById('@authorSearchSetting.InputFieldId');
        const inputButton = document.getElementById('@authorSearchSetting.ButtonId');
        const returnToArray = document.getElementById('returnToAuthorArray');
        const form = document.getElementById("newsLetterSettingsForm");
            
        let subscribedAuthors = @Html.Raw(Json.Serialize(@subscribedTo));
        let lastOddOrEven = 1;
        if (subscribedAuthors[0] !== "NO!"){
            lastOddOrEven = CreateAuthorDivs("authorNamesContainer", subscribedAuthors);
        }
        
        form.addEventListener('submit', function (event){
            event.preventDefault();
            let AuthorValues = GetAuthorDivValues();
            if (AuthorValues !== "NO AUTHORS"){
                console.log(AuthorValues);
            }
            
            const data = new FormData(event.target);
            const formJSON = Object.fromEntries(data.entries());
            
            console.log(formJSON);
            
            
            
            AjaxUpdateNewsLetterSetting();
        });
        
        returnToArray.addEventListener('JSValueChange', function(){
            @{@authorSearchSetting.JsArrayName}.push(this.value);
        });

        inputBox.addEventListener('keydown', function (e) {
            if (e.key === "Enter") {
                AddAuthorToSubscribed(inputBox);
            }
        });
        
        inputButton.addEventListener('click', function (){
            AddAuthorToSubscribed(inputBox);
        });

        function AddAuthorToSubscribed(inputElement){
            
            let stefansMindBeAtEase = document.getElementById("authorNamesContainer").getElementsByTagName("input")[0];
            if (stefansMindBeAtEase === undefined){lastOddOrEven = 1;}
            
            let inputValue = inputElement.value;

            if (arrayContains(@{@authorSearchSetting.JsArrayName}, inputValue)){
                @{@authorSearchSetting.JsArrayName} = @{@authorSearchSetting.JsArrayName}.filter(function (val) {
                    return val !== inputValue;
                });
                
                lastOddOrEven = CreateSingleAuthorDiv("authorNamesContainer", inputValue);
                document.getElementById('@authorSearchSetting.InputFieldId').innerHTML = "";
            }
        }
    });
</script>