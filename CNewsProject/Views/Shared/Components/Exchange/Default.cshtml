@using CNewsProject.StaticTempData

<div class="accordion">
    <div class="card accordion-item">
        <div class="accordion-header" id="headingExch">
            <button class="accordion-button c-gradient-90 text-light" data-bs-toggle="collapse" data-bs-target="#collapseExch" aria-expanded="true" aria-controls="collapseExch">
                <h3>Exchange rates</h3>
            </button>
        </div>
        @{
            // Calculating base exchange rates for 100 SEK and ensuring correct formatting
            // string usd = (Model.USD * 100).ToString("F2");
            // string eur = (Model.EUR * 100).ToString("F2");
            // string jpy = (Model.JPY * 100).ToString("F2");
            // string cny = (Model.CNY * 100).ToString("F2");
            // string gbp = (Model.GBP * 100).ToString("F2");
        }
        <div id="collapseExch" class="accordion-collapse collapse show card-body" aria-labelledby="headingExch">
            <p>Enter the amount in SEK:</p>
            <input class="form-control mb-3" type="number" value="100" min="1" onchange="updateExchangeRates(this)"/>
            <ul>
                <li class="liusd">USD : @CTempData.ExchangeRates.USD $</li>
                <li class="lieur">EUR : @CTempData.ExchangeRates.EUR €</li>
                <li class="lijpy">JPY : @CTempData.ExchangeRates.JPY Yen</li>
                <li class="licny">CNY : @CTempData.ExchangeRates.CNY Yuán</li>
                <li class="ligbp">GBP : @CTempData.ExchangeRates.GBP £</li>
            </ul>
        </div>
        <script type="text/javascript">
        // Parsing Razor variables as floats in JavaScript
        let usdRate = parseFloat('@(CTempData.ExchangeRates.USD.ToString(System.Globalization.CultureInfo.InvariantCulture))');
        let eurRate = parseFloat('@(CTempData.ExchangeRates.EUR.ToString(System.Globalization.CultureInfo.InvariantCulture))');
        let jpyRate = parseFloat('@(CTempData.ExchangeRates.JPY.ToString(System.Globalization.CultureInfo.InvariantCulture))');
        let cnyRate = parseFloat('@(CTempData.ExchangeRates.CNY.ToString(System.Globalization.CultureInfo.InvariantCulture))');
        let gbpRate = parseFloat('@(CTempData.ExchangeRates.GBP.ToString(System.Globalization.CultureInfo.InvariantCulture))');

        function updateExchangeRates(amountChanger) {
            const amountInSek = parseFloat(amountChanger.value);
            let siblingEle = amountChanger.nextElementSibling;


            // Calculate and update each currency value
            siblingEle.querySelector('.liusd').textContent = `USD: ${(amountInSek * usdRate).toFixed(2)} $`;
            siblingEle.querySelector('.lieur').textContent = `EUR: ${(amountInSek * eurRate).toFixed(2)} €`;
            siblingEle.querySelector('.lijpy').textContent = `JPY: ${(amountInSek * jpyRate).toFixed(2)} Yen`;
            siblingEle.querySelector('.licny').textContent = `CNY: ${(amountInSek * cnyRate).toFixed(2)} Yuán`;
            siblingEle.querySelector('.ligbp').textContent = `GBP: ${(amountInSek * gbpRate).toFixed(2)} £`;
        }

        // Initialize the exchange rates on page load
        document.addEventListener("DOMContentLoaded", function () {
            updateExchangeRates();
        });

    </script>
    </div>
</div>