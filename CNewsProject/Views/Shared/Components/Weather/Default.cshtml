
@model WeatherStats


@{
    
    WeatherStats stats = new();

    String hourMin = DateTime.Now.ToString("HH:mm");
    String weatherTime = DateTime.Now.ToString("yyyy-MM-dd HH:00:00");
    DateTime testTime = Convert.ToDateTime(weatherTime); 
    Parameter temperature = Model.timeSeries.FirstOrDefault(ts => ts.validTime == testTime).parameters.FirstOrDefault(p => p.name == "t");
}

<div class="weather-details">
    <div class="weather-info">
        <div class="card">
            <h3>Weather</h3>     
            <div class="row mg">
                <label>City</label>
                <input id="city" type="text" />
            </div>
            <div class="btn">
                <input class="offset-md-2" type="submit" value="Find" />
            </div>
            <p>Latitude: @Model.geometry.type.Length</p>
            @* <p>Longitude: @Model.geometry.type</p>
            <p>Timezone: @Model.referenceTime.</p> *@
            <p>Time: @hourMin</p>
            <p>Temperature: @temperature.values[0] °C</p>
            <div class="weather-icon">☀️</div>
            <p><a href="https://www.smhi.se/en/q/Linköping/2694762">Weather SMHI</a></p>
        </div>
    </div>
</div>

@*
    Find City

    Use :  Stockholm/ Stockholm är ett defaultvärde, ska ersättas med "City" så vi kan välja stad.
    Och då får vi latitud och longitud "@59.326142,17.9820525 (Stockholm)"

    city = id"city"
    BaseUrl = "https://www.google.se/maps/place/ + "city"+/ 
        Longitude = https://www.google.se/maps/place/city/ +"lon/" - https://www.google.se/maps/place/city/
        Latitude =  https://www.google.se/maps/place/city/@59.326142/ +"lat" - https://www.google.se/maps/place/city/@59.326142/

    EndUrl = ",11z/data=!3m1!4b1!4m6!3m5!1s0x465f763119640bcb:0xa80d27d3679d7766!8m2!3d59.3293235!4d18.0685808!16zL20vMDZteHM!5m1!1e1?entry=ttu"

        }

        public async Task<WeatherStats> GetWeatherAsync(string latVal, string longVal)
        {
            var client = new HttpClient();

            string url = BaseUrl + Latitude + latVal + Longitude + longVal + EndUrl;

            var response = await client.GetAsync(url);
    


*@ 

