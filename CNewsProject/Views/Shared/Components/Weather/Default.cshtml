@model WeatherStats


@{

	WeatherStats stats = new();
	string city = "Stockholm";
	string hourMin = DateTime.Now.ToString("HH:mm");
	int hour = DateTime.Now.Hour;
	hour++;
	string weatherTime = DateTime.Now.ToString("yyyy-MM-dd HH:00:00");
	DateTime testTime = Convert.ToDateTime(weatherTime);

}

<div class="weather-details">
	<div class="weather-info">
		<div class="card">
			<div class="card-body">
				<div style="background-color:#dee6ef;">
			<h3 id="place" >Weather: @Model.NameOfCity</h3>
					</div>
			<form>
				<div class="mt-3">
					<label for=" City" class="form-label">City:</label><br />
					<input type="text" class="form-control" id="city" placeholder="@Model.NameOfCity" default="@city" />
				</div>
			</form>

			<div class="p-2 ps-0">
				<button class="btn-sm" id="searchcity" onclick="FindNewCity(Search())">Find</button>
			</div>
			<p>Time: @hourMin</p>
			<p>Temp: @Model.Hourly.Temperature_2m[hour]</p>
			<p>Temperature: @Model.CurrentTemperature °C</p>
			@* <div class="weather-icon">☀️</div> *@
				<p><a href="https://www.smhi.se/en/q/Linköping/2694762">Weather SMHI</a></p>
			</div>
		</div>
	</div>

</div>

<script type="text/javascript">
	function Search() {
		return document.getElementById('city').value;
	}
</script>


		@* public double Latitude { get; set; }
		public double Longitude { get; set; }
		public double Generationtime_ms { get; set; }
		public int Utc_offset_seconds { get; set; }
		public string? Timezone { get; set; }
		public string? Timezone_abbreviation { get; set; }
		public int Elevation { get; set; }
		public HourlyUnits? Hourly_units { get; set; }
		public Hourly? Hourly { get; set; }
		public string? CurrentTime { get; set; }
		public double CurrentTemperature { get; set; }
		public string NameOfCity { get; set; } = "Stockholm";
		
		
		Parameter temperature = Model.timeSeries.FirstOrDefault(ts => ts.validTime == testTime).parameters.FirstOrDefault(p => p.name == "t");
		*@